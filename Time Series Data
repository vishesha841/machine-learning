import numpy as np
import pandas as pd
import statsmodels.api as sm
import matplotlib.pyplot as plt

np.random.seed(42)
n_months = 120  # 10 years of monthly data
time = np.arange(1, n_months + 1)
seasonal_effect = 10 * np.sin(2 * np.pi * time / 12) + 5 * np.cos(2 * np.pi * time / 12)
trend_effect = 0.5 * time
random_noise = np.random.normal(0, 5, n_months)
electricity_consumption = 100 + trend_effect + seasonal_effect + random_noise

df = pd.DataFrame({
    "Time": time,
    "Electricity_Consumption": electricity_consumption
})


df["Sin_Month"] = np.sin(2 * np.pi * df["Time"] / 12)
df["Cos_Month"] = np.cos(2 * np.pi * df["Time"] / 12)

X = df[["Time", "Sin_Month", "Cos_Month"]]
X = sm.add_constant(X)  # Add constant for intercept
Y = df["Electricity_Consumption"]

model = sm.OLS(Y, X).fit()


print(model.summary())

df["Fitted"] = model.predict(X)
plt.figure(figsize=(12, 6))
plt.plot(df["Time"], df["Electricity_Consumption"], label="Actual Consumption", alpha=0.7)
plt.plot(df["Time"], df["Fitted"], label="Fitted Values", linestyle="--")
plt.legend()
plt.xlabel("Time (Months)")
plt.ylabel("Electricity Consumption")
plt.title("Actual vs Fitted Electricity Consumption")
plt.show()
